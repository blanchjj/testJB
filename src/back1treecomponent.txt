import {Component, OnInit} from '@angular/core';
import {GridOptions} from 'ag-grid';

import { CheckBoxComponent } from '../checkbox/checkbox.component';
import { ClassTreeService } from '../class-tree.service';
import { ClassTreeNode} from '../class-tree-node';

@Component({
  moduleId: module.id,
  selector: 'app-inv-dash-tree',
  template: `
    <button type="submit" class="btn btn-default" (click)="add()">AddNode</button>
    <button type="submit" class="btn btn-default" (click)="delete()">DelNode</button>
    <ag-grid-angular #invDashTree style="width: 100%; height: 94%;"  class="ag-fresh"
                 [gridOptions]="gridOptions" 
                >
    </ag-grid-angular>
  `
})
export class InvDashTreeComponent implements OnInit {
    public gridOptions: GridOptions;

    constructor(private classTreeService: ClassTreeService) 
    {
        this.gridOptions = <GridOptions>{};
        this.gridOptions.getNodeChildDetails = this.getNodeChildDetail;
        //this.gridOptions.rowData = this.productTreeService.get();

        this.gridOptions.columnDefs = [
            
                {headerName: "#", field: "checked", width: 33,
                     cellRendererFramework: CheckBoxComponent},

                {headerName: "Product", field: "name", width: 150, cellRenderer: 'group'},

                {headerName: "Bid", field: "openForBid", width: 39,
                     cellRendererFramework: CheckBoxComponent},

                {headerName: "Offer", field: "openForOffre", width: 39,
                    cellRendererFramework: CheckBoxComponent}
        ];
    }

    delete():void {

        var id:number = 5;

        this.classTreeService.delete(id)
            .then( classTreeNode => {
                console.log(classTreeNode);
                this.getClassTreeData();
            });
    }

    add():void {

        var cts = new ClassTreeNode();
        cts.parentId = 1;
        cts.name ='NAT';
        cts.parent = false;
        cts.checked = false;
        cts.openForBid = false;
        cts.openForOffre = false;


        this.classTreeService.add(cts)
            .then( classTreeNode => {
                console.log(classTreeNode);
                this.getClassTreeData();
            });
    }

    getClassTreeData():void {
        this.classTreeService
            .get()
            .then(classTree => this.gridOptions.api.setRowData(classTree) )
    }

    //onGridReady(params) {
       // params.api.sizeColumnsToFit();

        //console.log('XYZ Grid ready');
        //this.getClassTreeData();
    //}

    ngOnInit(): void {
        console.log('ABC Grid ready');
        this.getClassTreeData();
    }

    getNodeChildDetail(node):any {

            var exp:boolean;

            if (node.level <= 2) { exp=true} else {exp=false}

            if (node.parent) {
            return {
                    group: true,
                    children: node.children,
                    expanded: exp,
                    field: 'name',
                    key: node.name
                }
            } else {
                return null;
            }
        }

}
